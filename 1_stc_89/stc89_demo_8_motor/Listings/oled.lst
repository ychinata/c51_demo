C51 COMPILER V9.54   OLED                                                                  06/24/2023 15:04:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\Software\Keil\Keil_C51\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\oled.lst) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"   //取模的中文库 
   3                          
   4          /***********************Delay****************************************/        
   5          //void delay_ms(unsigned int ms)
   6          //{                         
   7          //      unsigned int a;
   8          //      while(ms)
   9          //      {
  10          //              a=1800;
  11          //              while(a--);
  12          //              ms--;
  13          //      }
  14          //}
  15          
  16          
  17          //void Delay_50ms(unsigned int Del_50ms)
  18          //{
  19          //      unsigned int m;
  20          //      for(;Del_50ms>0;Del_50ms--)
  21          //              for(m=6245;m>0;m--);
  22          //}
  23          // 
  24          //void Delay_1ms(unsigned int Del_1ms)
  25          //{
  26          //      unsigned char j;
  27          //      while(Del_1ms--)
  28          //      {       
  29          //              for(j=0;j<123;j++);
  30          //      }
  31          //}
  32          
  33          /**********************************************
  34          //IIC Start
  35          **********************************************/
  36          void IIC_Start()
  37          {
  38   1       
  39   1              OLED_SCLK_Set() ;
  40   1              OLED_SDIN_Set();
  41   1              OLED_SDIN_Clr();
  42   1              OLED_SCLK_Clr();
  43   1      }
  44           
  45          /**********************************************
  46          //IIC Stop
  47          **********************************************/
  48          void IIC_Stop()
  49          {
  50   1          OLED_SCLK_Set() ;
  51   1          //  OLED_SCLK_Clr();
  52   1          OLED_SDIN_Clr();
  53   1          OLED_SDIN_Set();
  54   1              
C51 COMPILER V9.54   OLED                                                                  06/24/2023 15:04:00 PAGE 2   

  55   1      }
  56           
  57          void IIC_Wait_Ack()
  58          {
  59   1       
  60   1              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为上拉输入模式
  61   1              //GPIOB->CRH |= 0x00080000;
  62   1      //      OLED_SDA = 1;
  63   1      //      delay_us(1);
  64   1              //OLED_SCL = 1;
  65   1              //delay_us(50000);
  66   1      /*      while(1)
  67   1              {
  68   1                      if(!OLED_SDA)                           //判断是否接收到OLED 应答信号
  69   1                      {
  70   1                              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为通用推免输出模式
  71   1                              //GPIOB->CRH |= 0x00030000;
  72   1                              return;
  73   1                      }
  74   1              }
  75   1      */
  76   1              OLED_SCLK_Set() ;
  77   1              OLED_SCLK_Clr();
  78   1      }
  79          /**********************************************
  80          // IIC Write byte
  81          **********************************************/
  82           
  83          void Write_IIC_Byte(unsigned char IIC_Byte)
  84          {
  85   1              unsigned char i;
  86   1              unsigned char m,da;
  87   1              da=IIC_Byte;
  88   1              OLED_SCLK_Clr();
  89   1              for(i=0;i<8;i++)                
  90   1              {
  91   2                              m=da;
  92   2                      //      OLED_SCLK_Clr();
  93   2                      m=m&0x80;
  94   2                      if(m==0x80)
  95   2                      {OLED_SDIN_Set();}
  96   2                      else OLED_SDIN_Clr();
  97   2                              da=da<<1;
  98   2                      OLED_SCLK_Set();
  99   2                      OLED_SCLK_Clr();
 100   2                      }
 101   1      }
 102          /**********************************************
 103          // IIC Write Command
 104          **********************************************/
 105          void Write_IIC_Command(unsigned char IIC_Command)
 106          {
 107   1          IIC_Start();
 108   1          Write_IIC_Byte(0x78);            //Slave address,SA0=0
 109   1          IIC_Wait_Ack();     
 110   1          Write_IIC_Byte(0x00);                       //write command
 111   1          IIC_Wait_Ack();     
 112   1          Write_IIC_Byte(IIC_Command); 
 113   1          IIC_Wait_Ack();     
 114   1          IIC_Stop();
 115   1      }
 116          
C51 COMPILER V9.54   OLED                                                                  06/24/2023 15:04:00 PAGE 3   

 117          /**********************************************
 118          // IIC Write Data
 119          **********************************************/
 120          void Write_IIC_Data(unsigned char IIC_Data)
 121          {
 122   1          IIC_Start();
 123   1          Write_IIC_Byte(0x78);                       //D/C#=0; R/W#=0
 124   1          IIC_Wait_Ack();     
 125   1          Write_IIC_Byte(0x40);                       //write data
 126   1          IIC_Wait_Ack();     
 127   1          Write_IIC_Byte(IIC_Data);
 128   1          IIC_Wait_Ack();     
 129   1          IIC_Stop();
 130   1      }
 131          
 132          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 133          {
 134   1              if(cmd)
 135   1              {
 136   2                              Write_IIC_Data(dat);
 137   2              }
 138   1              else 
 139   1                      {
 140   2                              Write_IIC_Command(dat); 
 141   2                      }
 142   1      }
 143           
 144          /********************************************
 145          // fill_Picture
 146          ********************************************/
 147          void fill_picture(unsigned char fill_Data)
 148          {
 149   1              unsigned char m,n;
 150   1              for(m=0;m<8;m++)
 151   1              {
 152   2                      OLED_WR_Byte(0xb0+m,0);         //page0-page1
 153   2                      OLED_WR_Byte(0x00,0);           //low column start address
 154   2                      OLED_WR_Byte(0x10,0);           //high column start address
 155   2                      for(n=0;n<128;n++)
 156   2                              {
 157   3                                      OLED_WR_Byte(fill_Data,1);
 158   3                              }
 159   2              }
 160   1      }
 161           
 162           
 163          
 164           
 165          //坐标设置
 166           
 167          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 168          {       OLED_WR_Byte(0xb0+y,OLED_CMD);
 169   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 170   1              OLED_WR_Byte((x&0x0f),OLED_CMD); 
 171   1      }         
 172          
 173          //开启OLED显示    
 174          void OLED_Display_On(void)
 175          {
 176   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 177   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 178   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
C51 COMPILER V9.54   OLED                                                                  06/24/2023 15:04:00 PAGE 4   

 179   1      }
 180          
 181          //关闭OLED显示     
 182          void OLED_Display_Off(void)
 183          {
 184   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 185   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 186   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 187   1      }               
 188          
 189          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 190          void OLED_Clear(void)  
 191          {  
 192   1              u8 i,n;             
 193   1              for(i=0;i<8;i++)  
 194   1              {  
 195   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 196   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 197   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 198   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 199   2              } //更新显示
 200   1      }
 201          
 202          void OLED_On(void)  
 203          {  
 204   1              u8 i,n;             
 205   1              for(i=0;i<8;i++)  
 206   1              {  
 207   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 208   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 209   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 210   2                      for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 211   2              } //更新显示
 212   1      }
 213          
 214          //在指定位置显示一个字符,包括部分字符
 215          //x:0~127
 216          //y:0~63
 217          //mode:0,反白显示;1,正常显示                             
 218          //size:选择字体 16/12 
 219          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 220          {       
 221   1              unsigned char c=0,i=0;  
 222   1                      c=chr-' ';//得到偏移后的值                      
 223   1                      if(x>Max_Column-1){x=0;y=y+2;}
 224   1                      if(Char_Size ==16)
 225   1                              {
 226   2                              OLED_Set_Pos(x,y);      
 227   2                              for(i=0;i<8;i++)
 228   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 229   2                              OLED_Set_Pos(x,y+1);
 230   2                              for(i=0;i<8;i++)
 231   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 232   2                              }
 233   1                              else {  
 234   2                                      OLED_Set_Pos(x,y);
 235   2                                      for(i=0;i<6;i++)
 236   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 237   2                                      
 238   2                              }
 239   1      }
 240          
C51 COMPILER V9.54   OLED                                                                  06/24/2023 15:04:00 PAGE 5   

 241          //m^n函数
 242          u32 oled_pow(u8 m,u8 n)
 243          {
 244   1              u32 result=1;    
 245   1              while(n--)result*=m;    
 246   1              return result;
 247   1      }                                 
 248          
 249          //显示2个数字
 250          //x,y :起点坐标  
 251          //len :数字的位数
 252          //size:字体大小
 253          //mode:模式     0,填充模式;1,叠加模式
 254          //num:数值(0~4294967295);                         
 255          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 256          {               
 257   1              u8 t,temp;
 258   1              u8 enshow=0;                                               
 259   1              for(t=0;t<len;t++)
 260   1              {
 261   2                      temp=(num/oled_pow(10,len-t-1))%10;
 262   2                      if(enshow==0&&t<(len-1))
 263   2                      {
 264   3                              if(temp==0)
 265   3                              {
 266   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 267   4                                      continue;
 268   4                              }else enshow=1; 
 269   3                               
 270   3                      }
 271   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 272   2              }
 273   1      } 
 274          
 275          //显示一个字符号串
 276          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 277          {
 278   1              unsigned char j=0;
 279   1              while (chr[j]!='\0')
 280   1              {               OLED_ShowChar(x,y,chr[j],Char_Size);
 281   2                              x+=8;
 282   2                      if(x>120){x=0;y+=2;}
 283   2                              j++;
 284   2              }
 285   1      }
 286          
 287          //显示汉字
 288          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 289          {                           
 290   1              u8 t,adder=0;
 291   1              OLED_Set_Pos(x,y);      
 292   1          for(t=0;t<16;t++)
 293   1                      {
 294   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 295   2                                      adder+=1;
 296   2           }  
 297   1                      OLED_Set_Pos(x,y+1);    
 298   1          for(t=0;t<16;t++)
 299   1                              {       
 300   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 301   2                                      adder+=1;
 302   2            }                                 
C51 COMPILER V9.54   OLED                                                                  06/24/2023 15:04:00 PAGE 6   

 303   1      }
 304          
 305          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 306          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 307          {       
 308   1       unsigned int j=0;
 309   1       unsigned char x,y;
 310   1        
 311   1        if(y1%8==0) y=y1/8;      
 312   1        else y=y1/8+1;
 313   1              for(y=y0;y<y1;y++)
 314   1              {
 315   2                      OLED_Set_Pos(x0,y);
 316   2          for(x=x0;x<x1;x++)
 317   2                  {      
 318   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 319   3                  }
 320   2              }
 321   1      } 
 322           
 323          //初始化SSD1306                                     
 324          void OLED_Init(void)
 325          {       
 326   1       
 327   1              OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 328   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 329   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 330   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 331   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 332   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
 333   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 334   1              OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 335   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 336   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 337   1              OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 338   1              OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 339   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 340   1              OLED_WR_Byte(0x00,OLED_CMD);//
 341   1              
 342   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 343   1              OLED_WR_Byte(0x80,OLED_CMD);//
 344   1              
 345   1              OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 346   1              OLED_WR_Byte(0x05,OLED_CMD);//
 347   1              
 348   1              OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 349   1              OLED_WR_Byte(0xF1,OLED_CMD);//
 350   1              
 351   1              OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 352   1              OLED_WR_Byte(0x12,OLED_CMD);//
 353   1              
 354   1              OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 355   1              OLED_WR_Byte(0x30,OLED_CMD);//
 356   1              
 357   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 358   1              OLED_WR_Byte(0x14,OLED_CMD);//
 359   1              
 360   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 361   1      }  
 362           
C51 COMPILER V9.54   OLED                                                                  06/24/2023 15:04:00 PAGE 7   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1169    ----
   CONSTANT SIZE    =   2520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
