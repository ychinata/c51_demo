C51 COMPILER V9.54   OLED                                                                  09/20/2022 15:48:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Program Files\Keil_v5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\oled.lst) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127    
   7          //[1]0 1 2 3 ... 127    
   8          //[2]0 1 2 3 ... 127    
   9          //[3]0 1 2 3 ... 127    
  10          //[4]0 1 2 3 ... 127    
  11          //[5]0 1 2 3 ... 127    
  12          //[6]0 1 2 3 ... 127    
  13          //[7]0 1 2 3 ... 127                      
  14          
  15          
  16          /***********************Delay****************************************/
  17          void Delay_50ms(unsigned int Del_50ms)
  18          {
  19   1              unsigned int m;
  20   1              for(;Del_50ms>0;Del_50ms--)
  21   1                      for(m=6245;m>0;m--);
  22   1      }
  23          
  24          void Delay_1ms(unsigned int Del_1ms)
  25          {
  26   1              unsigned char j;
  27   1              while(Del_1ms--)
  28   1              {       
  29   2                      for(j=0;j<123;j++);
  30   2              }
  31   1      }
  32          
  33          
  34          /**********************************************
  35          //IIC Start
  36          **********************************************/
  37          void IIC_Start()
  38          {
  39   1              OLED_SCLK_Set() ;
  40   1              OLED_SDIN_Set();
  41   1              OLED_SDIN_Clr();
  42   1              OLED_SCLK_Clr();
  43   1      }
  44          
  45          /**********************************************
  46          //IIC Stop
  47          **********************************************/
  48          void IIC_Stop()
  49          {
  50   1              OLED_SCLK_Set() ;
  51   1              OLED_SDIN_Clr();
  52   1              OLED_SDIN_Set();
  53   1      }
  54          
C51 COMPILER V9.54   OLED                                                                  09/20/2022 15:48:37 PAGE 2   

  55          void IIC_Wait_Ack()
  56          {
  57   1              OLED_SCLK_Set() ;
  58   1              OLED_SCLK_Clr();
  59   1      }
  60          /**********************************************
  61          // IIC Write byte
  62          **********************************************/
  63          
  64          void Write_IIC_Byte(unsigned char IIC_Byte)
  65          {
  66   1              unsigned char i;
  67   1              unsigned char m,da;
  68   1              da=IIC_Byte;
  69   1              OLED_SCLK_Clr();
  70   1              for(i=0;i<8;i++)                
  71   1              {
  72   2                              m=da;
  73   2                      //      OLED_SCLK_Clr();
  74   2                      m=m&0x80;
  75   2                      if(m==0x80)
  76   2                      {OLED_SDIN_Set();}
  77   2                      else OLED_SDIN_Clr();
  78   2                              da=da<<1;
  79   2                      OLED_SCLK_Set();
  80   2                      OLED_SCLK_Clr();
  81   2                      }
  82   1      }
  83          
  84          /**********************************************
  85          // IIC Write Command
  86          **********************************************/
  87          void Write_IIC_Command(unsigned char IIC_Command)
  88          {
  89   1         IIC_Start();
  90   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  91   1              IIC_Wait_Ack(); 
  92   1         Write_IIC_Byte(0x00);                        //write command
  93   1              IIC_Wait_Ack(); 
  94   1         Write_IIC_Byte(IIC_Command); 
  95   1              IIC_Wait_Ack(); 
  96   1         IIC_Stop();
  97   1      }
  98          /**********************************************
  99          // IIC Write Data
 100          **********************************************/
 101          void Write_IIC_Data(unsigned char IIC_Data)
 102          {
 103   1         IIC_Start();
 104   1         Write_IIC_Byte(0x78);                        //D/C#=0; R/W#=0
 105   1               IIC_Wait_Ack();        
 106   1         Write_IIC_Byte(0x40);                        //write data
 107   1               IIC_Wait_Ack();        
 108   1         Write_IIC_Byte(IIC_Data);
 109   1               IIC_Wait_Ack();        
 110   1         IIC_Stop();
 111   1      }
 112          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 113          {
 114   1              if(cmd)
 115   1              {
 116   2                      Write_IIC_Data(dat);
C51 COMPILER V9.54   OLED                                                                  09/20/2022 15:48:37 PAGE 3   

 117   2              }
 118   1              else 
 119   1              {       
 120   2                      Write_IIC_Command(dat);
 121   2              }
 122   1      }
 123          
 124          /********************************************
 125          // fill_Picture
 126          ********************************************/
 127          void fill_picture(unsigned char fill_Data)
 128          {
 129   1              unsigned char m,n;
 130   1              for(m=0;m<8;m++)
 131   1              {
 132   2                      OLED_WR_Byte(0xb0+m,0);         //page0-page1
 133   2                      OLED_WR_Byte(0x00,0);           //low column start address
 134   2                      OLED_WR_Byte(0x10,0);           //high column start address
 135   2                      for(n=0;n<128;n++)
 136   2                              {
 137   3                                      OLED_WR_Byte(fill_Data,1);
 138   3                              }
 139   2              }
 140   1      }
 141          
 142          
 143          //坐标设置
 144          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 145          {       OLED_WR_Byte(0xb0+y,OLED_CMD);
 146   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 147   1              OLED_WR_Byte((x&0x0f),OLED_CMD); 
 148   1      } 
 149          
 150          //开启OLED显示    
 151          void OLED_Display_On(void)
 152          {
 153   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 154   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 155   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 156   1      }
 157          
 158          //关闭OLED显示     
 159          void OLED_Display_Off(void)
 160          {
 161   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 162   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 163   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 164   1      }
 165          
 166          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 167          void OLED_Clear(void)  
 168          {  
 169   1              u8 i,n;             
 170   1              for(i=0;i<8;i++)  
 171   1              {  
 172   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 173   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 174   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 175   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 176   2              } //更新显示
 177   1      }
 178          
C51 COMPILER V9.54   OLED                                                                  09/20/2022 15:48:37 PAGE 4   

 179          void OLED_On(void)  
 180          {  
 181   1              u8 i,n;             
 182   1              for(i=0;i<8;i++)  
 183   1              {  
 184   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 185   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 186   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 187   2                      for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 188   2              } //更新显示
 189   1      }
 190          
 191          //在指定位置显示一个字符,包括部分字符
 192          //x:0~127
 193          //y:0~63
 194          //mode:0,反白显示;1,正常显示                             
 195          //size:选择字体 16/12 
 196          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 197          {       
 198   1              unsigned char c=0,i=0;  
 199   1                      c=chr-' ';//得到偏移后的值                      
 200   1                      if(x>Max_Column-1){x=0;y=y+2;}
 201   1                      if(Char_Size ==16)
 202   1                              {
 203   2                              OLED_Set_Pos(x,y);      
 204   2                              for(i=0;i<8;i++)
 205   2                      OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 206   2                      OLED_Set_Pos(x,y+1);
 207   2                      for(i=0;i<8;i++)
 208   2                      OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 209   2                              }
 210   1                              else {  
 211   2                                      OLED_Set_Pos(x,y);
 212   2                                      for(i=0;i<6;i++)
 213   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 214   2                                      
 215   2                              }
 216   1      }
 217          
 218          //m^n函数
 219          u32 oled_pow(u8 m,u8 n)
 220          {
 221   1              u32 result=1;    
 222   1              while(n--)result*=m;    
 223   1              return result;
 224   1      }                       
 225          
 226          //显示2个数字
 227          //x,y :起点坐标  
 228          //len :数字的位数
 229          //size:字体大小
 230          //mode:模式     0,填充模式;1,叠加模式
 231          //num:数值(0~4294967295);                         
 232          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 233          {               
 234   1              u8 t,temp;
 235   1              u8 enshow=0;                                               
 236   1              for(t=0;t<len;t++)
 237   1              {
 238   2                      temp=(num/oled_pow(10,len-t-1))%10;
 239   2                      if(enshow==0&&t<(len-1))
 240   2                      {
C51 COMPILER V9.54   OLED                                                                  09/20/2022 15:48:37 PAGE 5   

 241   3                              if(temp==0)
 242   3                              {
 243   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 244   4                                      continue;
 245   4                              }else enshow=1; 
 246   3                               
 247   3                      }
 248   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 249   2              }
 250   1      } 
 251          
 252          //显示一个字符号串
 253          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 254          {
 255   1              unsigned char j=0;
 256   1              while (chr[j]!='\0')
 257   1              {               OLED_ShowChar(x,y,chr[j],Char_Size);
 258   2                              x+=8;
 259   2                      if(x>120){x=0;y+=2;}
 260   2                              j++;
 261   2              }
 262   1      }
 263          
 264          //显示汉字
 265          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 266          {                           
 267   1              u8 t,adder=0;
 268   1              OLED_Set_Pos(x,y);      
 269   1          for(t=0;t<16;t++)
 270   1                      {
 271   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 272   2                                      adder+=1;
 273   2           }  
 274   1                      OLED_Set_Pos(x,y+1);    
 275   1          for(t=0;t<16;t++)
 276   1                              {       
 277   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 278   2                                      adder+=1;
 279   2            }                                 
 280   1      }
 281          
 282          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 283          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 284          {       
 285   1          unsigned int j=0;
 286   1          unsigned char x,y;
 287   1        
 288   1          if(y1%8==0) y=y1/8;      
 289   1          else y=y1/8+1;
 290   1              for(y=y0;y<y1;y++)
 291   1              {
 292   2                      OLED_Set_Pos(x0,y);
 293   2              for(x=x0;x<x1;x++)
 294   2              {      
 295   3                  OLED_WR_Byte(BMP[j++],OLED_DATA);           
 296   3              }
 297   2              }
 298   1      } 
 299          
 300          //初始化SSD1306                                     
C51 COMPILER V9.54   OLED                                                                  09/20/2022 15:48:37 PAGE 6   

 301          void OLED_Init(void)
 302          {       
 303   1       
 304   1              OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 305   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 306   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 307   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 308   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 309   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
 310   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 311   1              OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 312   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 313   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 314   1              OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 315   1              OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 316   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 317   1              OLED_WR_Byte(0x00,OLED_CMD);//
 318   1              
 319   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 320   1              OLED_WR_Byte(0x80,OLED_CMD);//
 321   1              
 322   1              OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 323   1              OLED_WR_Byte(0x05,OLED_CMD);//
 324   1              
 325   1              OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 326   1              OLED_WR_Byte(0xF1,OLED_CMD);//
 327   1              
 328   1              OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 329   1              OLED_WR_Byte(0x12,OLED_CMD);//
 330   1              
 331   1              OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 332   1              OLED_WR_Byte(0x30,OLED_CMD);//
 333   1              
 334   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 335   1              OLED_WR_Byte(0x14,OLED_CMD);//
 336   1              
 337   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 338   1      }  
 339          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1219    ----
   CONSTANT SIZE    =   2200    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
