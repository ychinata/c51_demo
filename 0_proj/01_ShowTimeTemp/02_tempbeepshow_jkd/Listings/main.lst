C51 COMPILER V9.54   MAIN                                                                  12/03/2022 18:10:38 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Software\Keil_V5_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "AT24C02.h"
   3          //#include "ds1302.h"
   4          #include "ds1302_pz.h"
   5          #include "Delay.h"
   6          #include "DS18B20.h"
   7          #include "Key.h"
   8          #include "LCD1602.h"
   9          #include "Timer0.h"
  10          
  11          
  12          float T,TShow;
  13          char TLow,THigh;
  14          unsigned char KeyNum;
  15          
  16          unsigned char DS1302_Time[6];
  17          
  18          /*********************
  19           * Func.: 时间读取及显示LCD,显示在第二行
  20           * Author:普中科技
  21           * Date:2022.12.3
  22           *********************/     
  23          void main1()
  24          {
  25   1              LCD_Init();
  26   1              LCD_ShowString(2,1,"  -  -  ");//静态字符初始化显示
  27   1              LCD_ShowString(2,9,"  :  :  "); 
  28   1              ds1302_init();
  29   1              
  30   1              while(1) {
  31   2              
  32   2              ds1302_read_time();
  33   2              DS1302_Time[0]=gDS1302_TIME[2]/16;
  34   2              DS1302_Time[1]=gDS1302_TIME[2]&0x0f;
  35   2              DS1302_Time[2]=gDS1302_TIME[1]/16;
  36   2              DS1302_Time[3]=gDS1302_TIME[1]&0x0f;
  37   2              DS1302_Time[4]=gDS1302_TIME[0]/16;
  38   2              DS1302_Time[5]=gDS1302_TIME[0]&0x0f;     
  39   2              
  40   2                      LCD_ShowNum(2,1,DS1302_Time[0],2);//显示年
  41   2                      LCD_ShowNum(2,4,DS1302_Time[1],2);//显示月
  42   2                      LCD_ShowNum(2,7,DS1302_Time[2],2);//显示日
  43   2                      LCD_ShowNum(2,9,DS1302_Time[3],2);//显示时
  44   2                      LCD_ShowNum(2,12,DS1302_Time[4],2);//显示分
  45   2                      LCD_ShowNum(2,15,DS1302_Time[5],2);//显示秒
  46   2              
  47   2              }
  48   1      }     
  49          
  50          /*********************
  51           * Func.: 时间读取及显示
  52           * Author:江科大自化协
  53           * Date:
  54           *********************/
C51 COMPILER V9.54   MAIN                                                                  12/03/2022 18:10:38 PAGE 2   

  55          void main2()
  56          {
  57   1              LCD_Init();
  58   1              //DS1302_Init();
  59   1              LCD_ShowString(1,1,"  -  -  ");//静态字符初始化显示
  60   1              LCD_ShowString(2,1,"  :  :  "); 
  61   1              //DS1302_SetTime();//设置时间         
  62   1              
  63   1              while(1)
  64   1              {
  65   2                      //DS1302_ReadTime();//读取时间
  66   2                      LCD_ShowNum(1,1,DS1302_Time[0],2);//显示年
  67   2                      LCD_ShowNum(1,4,DS1302_Time[1],2);//显示月
  68   2                      LCD_ShowNum(1,7,DS1302_Time[2],2);//显示日
  69   2                      LCD_ShowNum(2,1,DS1302_Time[3],2);//显示时
  70   2                      LCD_ShowNum(2,4,DS1302_Time[4],2);//显示分
  71   2                      LCD_ShowNum(2,7,DS1302_Time[5],2);//显示秒
  72   2              
  73   2              }
  74   1      }
  75          
  76          
  77          //K1按键，THigh自增
  78          //K2按键，THigh自减
  79          //K3按键，TLow自增
  80          //K4按键，TLow自减
  81          /*********************
  82           * Func.: 温度读取及显示
  83           * Author:江科大自化协
  84           * Date:
  85           *********************/
  86          void main()
  87          {
  88   1          LCD_Init();
  89   1          //DS1302_Init();
  90   1          ds1302_init();
  91   1              LCD_ShowString(2,1,"  -  -  ");//静态字符初始化显示
  92   1              LCD_ShowString(2,9,"  :  :  "); 
  93   1              
  94   1      
  95   1          
  96   1          
  97   1          // 初始化-bgn
  98   1              DS18B20_ConvertT();             //上电先转换一次温度，防止第一次读数据错误
  99   1              Delay(1000);                    //等待转换完成
 100   1              THigh=AT24C02_ReadByte(0);      //读取温度阈值数据
 101   1              TLow=AT24C02_ReadByte(1);
 102   1              if(THigh>125 || TLow<-55 || THigh<=TLow)
 103   1              {
 104   2                      THigh=20;                       //如果阈值非法，则设为默认值
 105   2                      TLow=15;
 106   2              }
 107   1              //LCD_Init();
 108   1              LCD_ShowString(1,1,"T:");
 109   1      //      LCD_ShowString(2,1,"TH:");
 110   1      //      LCD_ShowString(2,9,"TL:");
 111   1      //      LCD_ShowSignedNum(2,4,THigh,3);
 112   1      //      LCD_ShowSignedNum(2,12,TLow,3);
 113   1              Timer0_Init();
 114   1              // 初始化-end
 115   1          
 116   1              while(1)
C51 COMPILER V9.54   MAIN                                                                  12/03/2022 18:10:38 PAGE 3   

 117   1              {
 118   2                      KeyNum=Key();
 119   2                      
 120   2                      /*温度读取及显示*/
 121   2                      DS18B20_ConvertT();     //转换温度
 122   2                      T=DS18B20_ReadT();      //读取温度
 123   2                      if(T<0)                         //如果温度小于0
 124   2                      {
 125   3                              LCD_ShowChar(1,3,'-');  //显示负号
 126   3                              TShow=-T;               //将温度变为正数
 127   3                      }
 128   2                      else                            //如果温度大于等于0
 129   2                      {
 130   3                              LCD_ShowChar(1,3,'+');  //显示正号
 131   3                              TShow=T;
 132   3                      }
 133   2                      LCD_ShowNum(1,4,TShow,3);               //显示温度整数部分
 134   2                      LCD_ShowChar(1,7,'.');          //显示小数点
 135   2                      LCD_ShowNum(1,8,(unsigned long)(TShow*100)%100,2);//显示温度小数部分
 136   2                      
 137   2                      /*阈值判断及显示*/
 138   2                      if(KeyNum)
 139   2                      {
 140   3                              if(KeyNum==1)   //K1按键，THigh自增
 141   3                              {
 142   4                                      THigh++;
 143   4                                      if(THigh>125){THigh=125;}
 144   4                              }
 145   3                              if(KeyNum==2)   //K2按键，THigh自减
 146   3                              {
 147   4                                      THigh--;
 148   4                                      if(THigh<=TLow){THigh++;}
 149   4                              }
 150   3                              if(KeyNum==3)   //K3按键，TLow自增
 151   3                              {
 152   4                                      TLow++;
 153   4                                      if(TLow>=THigh){TLow--;}
 154   4                              }
 155   3                              if(KeyNum==4)   //K4按键，TLow自减
 156   3                              {
 157   4                                      TLow--;
 158   4                                      if(TLow<-55){TLow=-55;}
 159   4                              }
 160   3      //                      LCD_ShowSignedNum(2,4,THigh,3); //显示阈值数据
 161   3      //                      LCD_ShowSignedNum(2,12,TLow,3);
 162   3                              AT24C02_WriteByte(0,THigh);             //写入到At24C02中保存
 163   3                              Delay(5);
 164   3                              AT24C02_WriteByte(1,TLow);
 165   3                              Delay(5);
 166   3                      }
 167   2              //越界判断
 168   2                      if (T>THigh) {
 169   3                              LCD_ShowString(1,13,"OV:H");
 170   3                      } else if(T<TLow) {
 171   3                              LCD_ShowString(1,13,"OV:L");
 172   3                      } else {
 173   3                              LCD_ShowString(1,13,"    ");
 174   3                      }
 175   2              
 176   2              // LCD显示时间-bgn
 177   2              ds1302_read_time();
 178   2              DS1302_Time[0]=gDS1302_TIME[2]/16;
C51 COMPILER V9.54   MAIN                                                                  12/03/2022 18:10:38 PAGE 4   

 179   2              DS1302_Time[1]=gDS1302_TIME[2]&0x0f;
 180   2              DS1302_Time[2]=gDS1302_TIME[1]/16;
 181   2              DS1302_Time[3]=gDS1302_TIME[1]&0x0f;
 182   2              DS1302_Time[4]=gDS1302_TIME[0]/16;
 183   2              DS1302_Time[5]=gDS1302_TIME[0]&0x0f;     
 184   2              
 185   2                      LCD_ShowNum(2,1,DS1302_Time[0],2);//显示年
 186   2                      LCD_ShowNum(2,4,DS1302_Time[1],2);//显示月
 187   2                      LCD_ShowNum(2,7,DS1302_Time[2],2);//显示日
 188   2                      LCD_ShowNum(2,9,DS1302_Time[3],2);//显示时
 189   2                      LCD_ShowNum(2,12,DS1302_Time[4],2);//显示分
 190   2                      LCD_ShowNum(2,15,DS1302_Time[5],2);//显示秒
 191   2              // LCD显示时间-end        
 192   2              
 193   2              
 194   2              
 195   2              }
 196   1      }
 197          
 198          /*********************
 199           * Func.: 按键扫描中断
 200           * Author:江科大自化协
 201           * Date:
 202           *********************/
 203          void Timer0_Routine() interrupt 1
 204          {
 205   1              static unsigned int T0Count;
 206   1              TL0 = 0x18;             //设置定时初值
 207   1              TH0 = 0xFC;             //设置定时初值
 208   1              T0Count++;
 209   1              if(T0Count>=20)
 210   1              {
 211   2                      T0Count=0;
 212   2                      Key_Loop();     //每20ms调用一次按键驱动函数
 213   2              }
 214   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    971    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
